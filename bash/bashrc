export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv virtualenv-init -)"

# in ls make directories yellow underlined. blue hard to read at times
LS_COLORS=$LS_COLORS:'di=1;4;33:' ; export LS_COLORS

# .bashrc
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

function get_docker_host {
  echo $DOCKER_HOST | cut -d. -f1 | cut -d: -f1
}

function proml {
  local        BLUE="\[\033[1;34m\]"
 
# OPTIONAL - if you want to use any of these other colors:
  local           RED="\[\033[0;31m\]"
  local     LIGHT_RED="\[\033[1;31m\]"
  local         GREEN="\[\033[0;32m\]"
  local        YELLOW="\[\033[0;33m\]"
  local BRIGHT_YELLOW="\[\033[1;33m\]"
  local   LIGHT_GREEN="\[\033[1;32m\]"
  local         WHITE="\[\033[1;37m\]"
  local    LIGHT_GRAY="\[\033[0;37m\]"
  local        PURPLE="\[\033[0;35m\]"
  local          CYAN="\[\033[0;36m\]"
# END OPTIONAL
 
  local     DEFAULT="\[\033[0m\]"
 
#PS1="\[\033[35m\]\t\[\033[m\]-\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h$WHITE:$YELLOW\w$BRIGHT_YELLOW\$(parse_git_branch) $WHITE\$(get_docker_host)$DEFAULT\$ "
PS1="$PURPLE\t$WHITE$CYAN\u@\h$YELLOW\w$BRIGHT_YELLOW\$(parse_git_branch) $WHITE\$(get_docker_host)$DEFAULT\$ "
}
 
proml

alias gs='git status'
alias dev='cd ~/dev'
alias vim="nvim"
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias kc='kubectl'

dcl ()
{
    docker-compose logs $@
}

dclt ()
{
    docker-compose logs --tail=200 -f $@
}

dcfr ()
{
    docker-compose up -d --force-recreate $@
}

dcup ()
{
    docker-compose up -d $@
}

dcps ()
{
    docker-compose ps
}

dhost()
{
    env | grep DOCKER
}

gl()
{
    if [ $# -eq 0 ]; then
        git log --decorate -3
    else
        git log --decorate $@
    fi
}

gc()
{
    git checkout $@
}

dent ()
{
    docker exec -it $1 /bin/bash
}

dbash ()
{
    docker run -it $1 /bin/bash
}

dps ()
{
    docker ps
}

nenv ()
{
    container=$(docker create -it --entrypoint=/bin/bash --workdir /repo -v ~/dev:/repo $1)
    #docker cp -L ~/.bashrc $container:/root/.bashrc
    docker start -ia $container
}

# sent (smart enter) is like dent except rather than entering by container name, it will
# enter based on the container service name label
sent ()
{
    img_hash=$(docker ps --filter "label=com.docker.compose.service=$1" -q)
    docker exec -it ${img_hash} /bin/bash
}

unalias ll 2>/dev/null
ll()
{
    ls -lh $@
}

